is_cart_item_exists=CartItem.objects.filter(product=product,cart=cart).exists
    if is_cart_item_exists:
    
     cart_item= CartItem.objects.create(product=product,cart=cart) 

        # existing variations
        # current cariations
        #item_id database
         
     ex_var_list=[]
        for item in cart_item:
            existing_variation=item.variations.all()
            ex_var_list.append(list(existing_variation))
            
            if product_variation in ex_var_list:
                return HttpResponse('true')
            else:
                return HttpResponse('fasle')




                item=CartItem.objects.create(Product=product,quantity=1,cart=cart)




 {% if cart_item.variations.all %}
                           {% for item in cart_item.variations.all %}
                              {{ item.variation_category }} : {{ item.variation_value }}
                           {% endfor %}
                      {% endif %}



                      {%endif%}

                        <div class="widget-header">
                            <small class="title text-muted">Welcome {{user.first_name}}</small>

                            <div> 
                                <a href="#">Dashboard</a> <span class="dark-transp"> | </span>
                                <a href="{% url 'logout' %}"> Logout</a>
                            </div>
                        </div>


 if request.method == 'POST':
        email = request.POST['email']
        password = request.POST['password']

        user=auth.authenticate(email=email,password=password)

        if user is not None:
            auth.login(request,user)
            return redirect('home')
        else:
            messages.error(request,"Invalid Login")
            return redirect('login')   
    return render(request,'accounts/login.html')
                       

        current_site = get_current_site(request)
        mail_subject = 'Please activate your account'
        message = render_to_string('accounts/account_verification_email.html', {
                'user': user,
                'domain': current_site,

                # we are encoding user Primary Key (ID) so nobody can see 

                'uid': urlsafe_base64_encode(force_bytes(user.pk)),
                'token': default_token_generator.make_token(user),
            })




            from django.contrib.sites.shortcuts import get_current_site
from django.template.loader import render_to_string
from django.utils.http import urlsafe_base64_encode,urlsafe_base64_decode
from django.utils.encoding import force_bytes
from django.contrib.auth.tokens import default_token_generator
from django.core.mail import EmailMessage